DAX PATTERNS
Centric Consulting 2018
Jeff Kanel

NOTES

1. Please use DAX Formatter (https://www.daxformatter.com/) to format the formulations.

2. Many of these formulas assume that there is a Centric Calendar dimension with "index" columns
   that can be used to time series analysis.  Using the index columns is preferable to built-in
   DAX functions such as PREVIOUSYEAR or YTD, mainly because the latter cannot support fiscal
   calendars.

/* ################################################################################ */

PATTERN
--------------
Balance

DESCRIPTION
--------------
Given a balance amount that is restated on multiple dates,
keep that balance in effect until the next balance amount is stated.

COMMENTS
--------------
When an account balance goes to zero, it is recommended to create
a source table record with a NULL acccount_balance_amount rather than a Zero.
Otherwise the zeroed account will appear in all future results.

FORMULATION
--------------
Account Balance :=
CALCULATE (
    CALCULATE (
        SUM ( [account_balance_amount] ),
        LASTNONBLANK ( Calendar[date_key], CALCULATE ( SUM ( [account_balance_amount] ) ) )
    ),
    FILTER ( ALL ( Calendar ), Calendar[date_key] <= MAX ( Calendar[date_key] ) )
)

/* ################################################################################ */

PATTERN
--------------
PYTD (Prior Year To Date)

Note: Similar pattern for PMTD, PQTD, etc.
Note: 

DESCRIPTION
--------------
Given a period bounded by dates d1 and d2,
where d2 identifies a day-of-year (index),
calculate an amount from the beginning of the prior year
through the equivalent day-of-year (index)

COMMENTS
--------------
A similar pattern can be applied to PMTD, PQTD, etc.

FORMULATION
--------------

Sales PYTD :=
CALCULATE (
    SUM ( Sales.[sales_amount] ),
    ALL ( Calendar ),
    Calendar.[year_index]
        = MAX ( Calendar.[year_index] ) - 1,
    Calendar.[day_of_year_index] <= MAX ( Calendar.[day_of_year_index] )
)

/* ################################################################################ */

PATTERN
--------------
Rolling Sum or Average

Note: Similar pattern for PMTD, PQTD, etc.
Note: 

DESCRIPTION
--------------
Given a period bounded by dates d1 and d2,
where d2 identifies a day-of-year (index),
calculate an amount from 90 days prior to d2.

COMMENTS
--------------
A similar pattern can be applied to PMTD, PQTD, etc.

FORMULATION
--------------

Sales 90Day Roll :=
CALCULATE (
    DIVIDE(SUM ( Sales.[sales_amount] ), 30),
    ALL ( Calendar ),
    AND(Calendar.[day_index] <= MAX ( Calendar.[day_index] )
    , Calendar.[day_index] >= MAX ( Calendar.[day_index] ) - 90)
)



/* ################################################################################ */

PATTERN
--------------
Count between two dates.


DESCRIPTION
--------------
Given a table with date ranges, count the number of days corresponding to the context in the Calendar table.

COMMENTS
--------------
https://powerpivotpro.com/2013/04/counting-active-rows-in-a-time-period-guest-post-from-chris-campbell/

FORMULATION
--------------

In-Force Policies :=
CALCULATE (
    DISTINCTCOUNT ( 'Policy Life'[inforce_policy_key] ),
    FILTER (
        'Policy Life',
        (
            [begin_effect_date_key] <= LASTDATE ( Calendar[date_key] )
                && [end_effect_date_key >= FIRSTDATE(Calendar[date_key]
        )
    )
)
